import requests

# Replace with the actual access token
access_token="eyJraWQiOiJ3dkxMRzFsb2dcL1B6TVVYTk5jMVlWYWhyTUtcL0ZxVnE1XC8xOWo4OW1qUTVvPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI5NDc4MTQzOC1kMDAxLTcwYTYtYzA4ZS00YzM2MWRiNzJlM2UiLCJjb2duaXRvOmdyb3VwcyI6WyJ1cy1lYXN0LTFfRjVIZ0Z1ZHRPX2NlbGx5bWljcm9zb2Z0cG9vbCJdLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9GNUhnRnVkdE8iLCJ2ZXJzaW9uIjoyLCJjbGllbnRfaWQiOiI1ZGZpOHMwNmw2ZXBodTVlNWM2dnJpNGFxZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoicGhvbmUgb3BlbmlkIGVtYWlsIiwiYXV0aF90aW1lIjoxNzA5MDY3ODgwLCJleHAiOjE3MDkwNzE0ODAsImlhdCI6MTcwOTA2Nzg4MCwianRpIjoiZmZjYjQxMDMtZmNlZi00MzhlLTgxMWYtODJiZTE1MzljYjBlIiwidXNlcm5hbWUiOiJjZWxseW1pY3Jvc29mdHBvb2xfZXRoYW4uc3RlaW5AdGVjaHRoaW5rdGFuay5jb20ifQ.aCD3X6Xvc4mshDoV017uQH46EOn9tEVTRGwph6hLm8Ars0fZAZkbUDSkg1AwgCHLnM2b53bMiT6P3VwrcrW2r3uWMOKomIlvwfsgNh7cA0HxTyLSV4NOA9N27UFoGO9LOG-W75jqWwTeDrcFcA8Vk80PW1y0cfU9wPUzrIfhNShJ9Er8DQZMmAqTopTaybxm1HdUgLJW-lKH0aRUckrMNb-vqJcLKTqI_gUqaqOe_AiDwGPMiZ5ADL5TZTFDtfaUYpHS7AsA4fH-qGpZF4Gyc7t26mQJUgAk8AEdH8z6bJ9K_iet9YxWXm4ajU26LmagBdiWCXnfjXJwMDTMmFhBgQ&id_token=eyJraWQiOiJxeFR5SngyXC9HeWxJU05OVjFmNHY3RmxnTm9aczdLNWg4N09qbzNlSXFSVT0iLCJhbGciOiJSUzI1NiJ9.eyJhdF9oYXNoIjoidmVpVndwRWRiNFFQaHowcmZIaThqUSIsInN1YiI6Ijk0NzgxNDM4LWQwMDEtNzBhNi1jMDhlLTRjMzYxZGI3MmUzZSIsImNvZ25pdG86Z3JvdXBzIjpbInVzLWVhc3QtMV9GNUhnRnVkdE9fY2VsbHltaWNyb3NvZnRwb29sIl0sImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfRjVIZ0Z1ZHRPIiwiY29nbml0bzp1c2VybmFtZSI6ImNlbGx5bWljcm9zb2Z0cG9vbF9ldGhhbi5zdGVpbkB0ZWNodGhpbmt0YW5rLmNvbSIsImF1ZCI6IjVkZmk4czA2bDZlcGh1NWU1YzZ2cmk0YXFlIiwiaWRlbnRpdGllcyI6W3siZGF0ZUNyZWF0ZWQiOiIxNzA5MDUzMDM1MDgyIiwidXNlcklkIjoiZXRoYW4uc3RlaW5AdGVjaHRoaW5rdGFuay5jb20iLCJwcm92aWRlck5hbWUiOiJjZWxseW1pY3Jvc29mdHBvb2wiLCJwcm92aWRlclR5cGUiOiJTQU1MIiwiaXNzdWVyIjoiaHR0cHM6XC9cL3N0cy53aW5kb3dzLm5ldFwvM2FkMzY2ZDYtODJmNC00ZDlhLWE5NWEtOTViZWRlOWFmZGEzXC8iLCJwcmltYXJ5IjoidHJ1ZSJ9XSwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3MDkwNjc4ODAsImV4cCI6MTcwOTA3MTQ4MCwiaWF0IjoxNzA5MDY3ODgwLCJqdGkiOiIzMjU4ZWZmMy05NWQ1LTQwNTgtYjRiOC0yODU3MWY0NTQ3ODciLCJlbWFpbCI6ImV0aGFuLnN0ZWluQHRlY2h0aGlua3RhbmsuY29tIn0.nePfTRiB4jDDDDuf_hZsO7stmzTcA9c4lZjuPd4SU2-FbPD9WHXqXEsJ0TNm99b_LTruCcZTXuLvMlAjYmuHYIwblVegZ4K5pcuDLdgiAvZ06jUCjXxVU11zD-o8JVZSGDHjKzxPm-d-CIBSEvHcplzZ5aTjQqBMuPcgg2OETP-AB3pnMOmM7_xG_b2mRZe5T5OKtXxZ5WGjfq2nQJLQ0mq1eK3F8uV9ttoOLsnwxL_XLzooSWo9bYm_8ePTLzglTQ5cMHObqRjPVYnFeUEwZY2vbPmcGTR3fAnuPzNFJK3X2wE_3KChOjoy3mfwsB2wlesdeQwsH4mEUxFLF13Twg"
# Base URL for Microsoft Graph API
graph_url = "https://graph.microsoft.com/User.Read"

headers = {
    "Authorization": f"{access_token}"
}

response = requests.get(graph_url, headers=headers)

if response.status_code == 200:
    data = response.json()
    print(data)
else:
    print("Error:", response.status_code, response.text)